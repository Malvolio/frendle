/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UikitImport } from './routes/uikit'
import { Route as SessionImport } from './routes/session'
import { Route as ResourcesImport } from './routes/resources'
import { Route as ProfileImport } from './routes/profile'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as MatchImport } from './routes/match'
import { Route as LoginImport } from './routes/login'
import { Route as HomeImport } from './routes/home'
import { Route as AboutImport } from './routes/about'

// Create/Update Routes

const UikitRoute = UikitImport.update({
  id: '/uikit',
  path: '/uikit',
  getParentRoute: () => rootRoute,
} as any)

const SessionRoute = SessionImport.update({
  id: '/session',
  path: '/session',
  getParentRoute: () => rootRoute,
} as any)

const ResourcesRoute = ResourcesImport.update({
  id: '/resources',
  path: '/resources',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyRoute = PrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const MatchRoute = MatchImport.update({
  id: '/match',
  path: '/match',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/match': {
      id: '/match'
      path: '/match'
      fullPath: '/match'
      preLoaderRoute: typeof MatchImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/resources': {
      id: '/resources'
      path: '/resources'
      fullPath: '/resources'
      preLoaderRoute: typeof ResourcesImport
      parentRoute: typeof rootRoute
    }
    '/session': {
      id: '/session'
      path: '/session'
      fullPath: '/session'
      preLoaderRoute: typeof SessionImport
      parentRoute: typeof rootRoute
    }
    '/uikit': {
      id: '/uikit'
      path: '/uikit'
      fullPath: '/uikit'
      preLoaderRoute: typeof UikitImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/match': typeof MatchRoute
  '/privacy': typeof PrivacyRoute
  '/profile': typeof ProfileRoute
  '/resources': typeof ResourcesRoute
  '/session': typeof SessionRoute
  '/uikit': typeof UikitRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/match': typeof MatchRoute
  '/privacy': typeof PrivacyRoute
  '/profile': typeof ProfileRoute
  '/resources': typeof ResourcesRoute
  '/session': typeof SessionRoute
  '/uikit': typeof UikitRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/match': typeof MatchRoute
  '/privacy': typeof PrivacyRoute
  '/profile': typeof ProfileRoute
  '/resources': typeof ResourcesRoute
  '/session': typeof SessionRoute
  '/uikit': typeof UikitRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/home'
    | '/login'
    | '/match'
    | '/privacy'
    | '/profile'
    | '/resources'
    | '/session'
    | '/uikit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/home'
    | '/login'
    | '/match'
    | '/privacy'
    | '/profile'
    | '/resources'
    | '/session'
    | '/uikit'
  id:
    | '__root__'
    | '/about'
    | '/home'
    | '/login'
    | '/match'
    | '/privacy'
    | '/profile'
    | '/resources'
    | '/session'
    | '/uikit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AboutRoute: typeof AboutRoute
  HomeRoute: typeof HomeRoute
  LoginRoute: typeof LoginRoute
  MatchRoute: typeof MatchRoute
  PrivacyRoute: typeof PrivacyRoute
  ProfileRoute: typeof ProfileRoute
  ResourcesRoute: typeof ResourcesRoute
  SessionRoute: typeof SessionRoute
  UikitRoute: typeof UikitRoute
}

const rootRouteChildren: RootRouteChildren = {
  AboutRoute: AboutRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  MatchRoute: MatchRoute,
  PrivacyRoute: PrivacyRoute,
  ProfileRoute: ProfileRoute,
  ResourcesRoute: ResourcesRoute,
  SessionRoute: SessionRoute,
  UikitRoute: UikitRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/about",
        "/home",
        "/login",
        "/match",
        "/privacy",
        "/profile",
        "/resources",
        "/session",
        "/uikit"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/match": {
      "filePath": "match.tsx"
    },
    "/privacy": {
      "filePath": "privacy.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/resources": {
      "filePath": "resources.tsx"
    },
    "/session": {
      "filePath": "session.tsx"
    },
    "/uikit": {
      "filePath": "uikit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
